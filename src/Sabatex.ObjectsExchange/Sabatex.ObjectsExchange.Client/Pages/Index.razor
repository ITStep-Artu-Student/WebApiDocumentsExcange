@page "/"
@attribute [Authorize]
@inject HttpClient httpClient
<PageTitle>Index</PageTitle>
<RadzenDataGrid @ref="grid" TItem="ClientNodeBase" Data="clients" PageSize="10" IsLoading="isGridDataLoading" LoadData="LoadData" Count="count">
    <Columns>
        <RadzenDataGridColumn TItem="ClientNodeBase" Property="Id"/>
    </Columns>
</RadzenDataGrid>

@code{
    IEnumerable<ClientNodeBase>? clients;
    RadzenDataGrid<ClientNodeBase>? grid;
    bool isGridDataLoading = false;
    int count = 0;
    async void LoadData(LoadDataArgs args)
    {
    //    //var response = await httpClient.GetAsync($"api/v0/clients?skip={args.Skip}&take={args.Top}");
        try{
            var response = await httpClient.GetAsync($"api/clients");
        if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
                    Console.WriteLine("Unauthorized");
        }
        if (response.IsSuccessStatusCode)
        {
    //        //string s = await response.Content.ReadAsStringAsync();
            var result = await response.Content.ReadFromJsonAsync<ResultCollection<ClientNodeBase>>();
            if (result != null)
            {
                clients = result.Items;
                count = result.Count;
            }
            
        }
        }
        catch (HttpRequestException ex)
        {
         var s = ex.Message; 
        }

    }
}
